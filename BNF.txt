<lbl> ::= "Normal" <nat> | "Point1" <nat> | "Point2" <nat>
<val> ::= "i(" <int> ")" | "r(" <reg> ")" | "p(" <ptr> ")"
<expr> ::=
    | <val>
    | "load" <val>
    | "r(" <reg> ")" "+" <val>
    | "r(" <reg> ")" "-" <val>
    | "r(" <reg> ")" "*" <val>
    | "r(" <reg> ")" "/" <val>

<phi-args> ::=
    | "(" <reg> "," <lbl> ")" ";" <phi-args>
    | "(" <reg> "," <lbl> ")"
<phi> ::=
    | "r(" <reg> ")" "<-" "[" <phi-args> "]"
<phis> ::=
    | <phi> ";" <phis>
<phis-or-nil> ::=
    | "[" <phis> "]"
    | "[" "]"

<inst> ::=
    | "r(" <reg> ")" "<-" <expr>
    | "store" "r(" <reg> ")" "r(" <reg> ")"
<insts> ::=
    | <inst> ";" <insts>
    | <inst>
<insts-or-nil> ::=
    | "[" <insts> "]"
    | "[" "]"

<cond> ::=
    | "r(" <reg> ")" "=" <val>
    | "r(" <reg> ")" "!=" <val>
    | "r(" <reg> ")" "<" <val>
    | "r(" <reg> ")" "<=" <val>
    | "r(" <reg> ")" ">" <val>
    | "r(" <reg> ")" ">=" <val>

<jinst> ::=
    | "if" <cond> "then" <block> "else" <block>
    | "jump" <block>
    | "ret" "r(" <reg> ")"

<block> ::=
    "Block" "(" <lbl> ")" <phis-or-nil> <insts-or-nil> "(" <jinst> ")"
